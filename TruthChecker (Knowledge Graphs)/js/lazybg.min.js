function BackgroundNode({node:e,loadedClassName:o}){let a=e.getAttribute("data-bgurl");console.log(e,a,"node");let d=d=>{requestAnimationFrame((()=>{e.style.backgroundImage=`url(${a})`,e.classList.add(o),d()}))};return{node:e,load(e){let o=new Image;o.onload=d(e),o.src=a}}}let defaultOptions={selector:"[data-bgurl]",loadedClassName:"loaded"};function BackgroundLazyLoader({selector:e,loadedClassName:o}=defaultOptions){let a=[].slice.apply(document.querySelectorAll(e)).map((e=>new BackgroundNode({node:e,loadedClassName:o}))),l=new IntersectionObserver(((e,o)=>{e.forEach((({target:e,isIntersecting:d})=>{if(!d)return;let l=a.find((o=>o.node.isSameNode(e)));l&&l.load((()=>{o.unobserve(e),(a=a.filter((o=>!o.node.isSameNode(e)))).length||o.disconnect()}))}))}));a.forEach((e=>l.observe(e.node)))}BackgroundLazyLoader();var lazyBackgrounds=[].slice.call(document.querySelectorAll(".lazy-background"));if("IntersectionObserver"in window){let lazyBackgroundObserver=new IntersectionObserver((function(entries,observer){entries.forEach((function(entry){entry.isIntersecting&&(entry.target.classList.add("visible"),lazyBackgroundObserver.unobserve(entry.target))}))}));lazyBackgrounds.forEach((function(lazyBackground){lazyBackgroundObserver.observe(lazyBackground)}))}
//# sourceURL=https://cdn1.hubspotusercontent-eu1.net/hub/139651395/hub_generated/template_assets/87920815580/1718203702661/sr/js/lazybg.js